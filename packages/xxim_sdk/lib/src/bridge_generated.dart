// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.62.1.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'bridge_generated.io.dart' if (dart.library.html) 'bridge_generated.web.dart';

abstract class XximSdk {
  Future<String> newInstance({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kNewInstanceConstMeta;

  Future<String> destroyInstance({required String instanceId, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kDestroyInstanceConstMeta;

  Future<String> init({required String instanceId, required String params, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kInitConstMeta;

  Future<String> setLoginInfo({required String instanceId, required String params, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kSetLoginInfoConstMeta;

  Future<String> unsetLoginInfo({required String instanceId, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUnsetLoginInfoConstMeta;

  Future<String> contextWithTimeout({required String instanceId, required int timeoutMills, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kContextWithTimeoutConstMeta;

  Future<String> userRegisterApi({required String instanceId, required String ctx, required Uint8List protobuf, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kUserRegisterApiConstMeta;
}

class XximSdkImpl implements XximSdk {
  final XximSdkPlatform _platform;
  factory XximSdkImpl(ExternalLibrary dylib) => XximSdkImpl.raw(XximSdkPlatform(dylib));

  /// Only valid on web/WASM platforms.
  factory XximSdkImpl.wasm(FutureOr<WasmModule> module) => XximSdkImpl(module as ExternalLibrary);
  XximSdkImpl.raw(this._platform);
  Future<String> newInstance({dynamic hint}) {
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_new_instance(port_),
      parseSuccessData: _wire2api_String,
      constMeta: kNewInstanceConstMeta,
      argValues: [],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kNewInstanceConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "new_instance",
        argNames: [],
      );

  Future<String> destroyInstance({required String instanceId, dynamic hint}) {
    var arg0 = _platform.api2wire_String(instanceId);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_destroy_instance(port_, arg0),
      parseSuccessData: _wire2api_String,
      constMeta: kDestroyInstanceConstMeta,
      argValues: [
        instanceId
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kDestroyInstanceConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "destroy_instance",
        argNames: [
          "instanceId"
        ],
      );

  Future<String> init({required String instanceId, required String params, dynamic hint}) {
    var arg0 = _platform.api2wire_String(instanceId);
    var arg1 = _platform.api2wire_String(params);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_init(port_, arg0, arg1),
      parseSuccessData: _wire2api_String,
      constMeta: kInitConstMeta,
      argValues: [
        instanceId,
        params
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kInitConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "init",
        argNames: [
          "instanceId",
          "params"
        ],
      );

  Future<String> setLoginInfo({required String instanceId, required String params, dynamic hint}) {
    var arg0 = _platform.api2wire_String(instanceId);
    var arg1 = _platform.api2wire_String(params);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_set_login_info(port_, arg0, arg1),
      parseSuccessData: _wire2api_String,
      constMeta: kSetLoginInfoConstMeta,
      argValues: [
        instanceId,
        params
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kSetLoginInfoConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "set_login_info",
        argNames: [
          "instanceId",
          "params"
        ],
      );

  Future<String> unsetLoginInfo({required String instanceId, dynamic hint}) {
    var arg0 = _platform.api2wire_String(instanceId);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_unset_login_info(port_, arg0),
      parseSuccessData: _wire2api_String,
      constMeta: kUnsetLoginInfoConstMeta,
      argValues: [
        instanceId
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUnsetLoginInfoConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "unset_login_info",
        argNames: [
          "instanceId"
        ],
      );

  Future<String> contextWithTimeout({required String instanceId, required int timeoutMills, dynamic hint}) {
    var arg0 = _platform.api2wire_String(instanceId);
    var arg1 = _platform.api2wire_i64(timeoutMills);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_context_with_timeout(port_, arg0, arg1),
      parseSuccessData: _wire2api_String,
      constMeta: kContextWithTimeoutConstMeta,
      argValues: [
        instanceId,
        timeoutMills
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kContextWithTimeoutConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "context_with_timeout",
        argNames: [
          "instanceId",
          "timeoutMills"
        ],
      );

  Future<String> userRegisterApi({required String instanceId, required String ctx, required Uint8List protobuf, dynamic hint}) {
    var arg0 = _platform.api2wire_String(instanceId);
    var arg1 = _platform.api2wire_String(ctx);
    var arg2 = _platform.api2wire_uint_8_list(protobuf);
    return _platform.executeNormal(FlutterRustBridgeTask(
      callFfi: (port_) => _platform.inner.wire_user_register_api(port_, arg0, arg1, arg2),
      parseSuccessData: _wire2api_String,
      constMeta: kUserRegisterApiConstMeta,
      argValues: [
        instanceId,
        ctx,
        protobuf
      ],
      hint: hint,
    ));
  }

  FlutterRustBridgeTaskConstMeta get kUserRegisterApiConstMeta => const FlutterRustBridgeTaskConstMeta(
        debugName: "user_register_api",
        argNames: [
          "instanceId",
          "ctx",
          "protobuf"
        ],
      );

  void dispose() {
    _platform.dispose();
  }
// Section: wire2api

  String _wire2api_String(dynamic raw) {
    return raw as String;
  }

  int _wire2api_u8(dynamic raw) {
    return raw as int;
  }

  Uint8List _wire2api_uint_8_list(dynamic raw) {
    return raw as Uint8List;
  }
}

// Section: api2wire

@protected
int api2wire_u8(int raw) {
  return raw;
}

// Section: finalizer
